apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Annif API
  name: api
spec:
  replicas: {{ .Values.apiReplicas }}
  selector:
    matchLabels:
      name: api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: api
        app: annif
      name: api
    spec:
      # download project data if defined
      {{- if .Values.projectsTarballUrl }}
      initContainers:
        - name: project-downloader
          image: {{ .Values.apiImage }}
          volumeMounts:
            - mountPath: /annif-projects
              name: annif-vol
          command: ["/bin/bash"]
          args:
            - -c
            - curl {{ .Values.projectsTarballUrl }} | tar xz -C /annif-projects
      {{- end }}
      containers:
        - name: api
          env: []
          image: {{ .Values.apiImage }}
          imagePullPolicy: {{ .Values.apiImagePullPolicy }}
          command: ["annif"]
          args:
            - run
            - --host=0.0.0.0
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 1900m
              memory: 4Gi
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 3
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /annif-projects
              name: annif-vol
      volumes:
        - name: annif-vol
          persistentVolumeClaim:
            claimName: annif-pvc
