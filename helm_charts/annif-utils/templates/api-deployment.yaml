apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Annif API
  name: api
spec:
  replicas: {{ .Values.apiReplicas }}
  selector:
    matchLabels:
      name: api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: api
        app: annif
      name: api
    spec:
      initContainers:
        # copy tomcat webapps to a local scratch volume for write access
        - name: prepare-maiuserver-webapps
          image: {{ .Values.apiImageMauiserver }}
          volumeMounts:
            - mountPath: /webapps
              name: tomcat-temp
              subPath: webapps
          command: ["/bin/bash"]
          args:
            - -c
            - cp -r /usr/local/tomcat/webapps/* /webapps/.
      {{- if .Values.projectsTarballUrl }}
        # download project data if download url is defined and a successful download has not been done before
        - name: project-downloader
          image: {{ .Values.apiImageAnnif }}
          volumeMounts:
            - mountPath: /annif-projects
              name: annif-vol
          command: ["/bin/bash"]
          args:
            - -c
            - >
              if [[ ! -e /annif-projects/DOWNLOAD_SUCCESSFUL ]]; then
                curl {{ .Values.projectsTarballUrl }} | tar xz -C /annif-projects;
                date -Is > /annif-projects/DOWNLOAD_SUCCESSFUL;
              fi
      {{- end }}
      containers:
        - name: annif
          env: []
          image: {{ .Values.apiImageAnnif }}
          imagePullPolicy: {{ .Values.apiImagePullPolicy }}
          command: ["annif"]
          args:
            - run
            - --host=0.0.0.0
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 4Gi
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 3
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /annif-projects
              name: annif-vol

        - name: mauiserver
          image: {{ .Values.apiImageMauiserver }}
          imagePullPolicy: {{ .Values.apiImagePullPolicy }}
          env: []
          command:
            - catalina.sh
            - run
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 4Gi
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /mauidata
              name: annif-vol
              subPath: mauidata
            - mountPath: /usr/local/tomcat/conf/Catalina/localhost
              name: tomcat-temp
              subPath: conf_Catalina_localhost
            - mountPath: /usr/local/tomcat/webapps
              name: tomcat-temp
              subPath: webapps
          ports:
            - containerPort: 8080

      volumes:
        # persistent volume for data
        - name: annif-vol
          persistentVolumeClaim:
            claimName: annif-pvc
        # temporary volume for mauiserver for directories that need to be writable
        - name: tomcat-temp
          emptyDir: {}
      {{ if .Values.securityContext }}
      securityContext: {{ .Values.securityContext }}
      {{ end }}
